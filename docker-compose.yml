version: "3"
services:

  # Mongo Database config
  mongo:
    image: mongo:latest
    container_name: UrlShortener-mongo
    restart: always
    ports:
      - 27017:27017
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    environment:
      - MONGO_INITDB_DATABASE=url_shortener
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin
    volumes:
      - ./mongodb:/data/db:Z
      - ./mongoconfig:/data/configdb:Z
  # Application config

  # Redis Database config
  redis:
    container_name: UrlShortener-redis
    image: redis:alpine
    restart: always
    volumes:
      ## keep redis data on localhost so we don't lose them ##
      - ./docker-volumes-data/redis:/data:Z
#    command: redis-server --requirepass f0pii0pVKJYwp
    environment:
      - REDIS_REPLICATION_MODE=master
  urlshortener:
    container_name: UrlShortener-application
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
#    environment:
#      REDIS_URL: redis:6379
#      REDIS_PASSWORD: f0pii0pVKJYwp
    depends_on:
      - redis
      - mongo
  # Web server Config
  webserver:
    image: nginx:alpine
    container_name: UrlShortener-nginx
    restart: always
    volumes:
      - .:/var/www
      ## copy nginx configuration for our application ##
      - ./deployment_conf/nginx/nginx.conf:/etc/nginx/nginx.conf:Z
    ports:
      ## run the webserver on port 6068 ##
      - "7073:7073"
    depends_on:
      - urlshortener
# Networks to be created to facilitate communication between containers
networks:
  default:
    external:
      name: external-backend
